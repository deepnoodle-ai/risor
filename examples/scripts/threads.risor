#!/usr/bin/env risor --

func subTask(name) {
    [1,2,3].each(func(n){
        printf("%s-sub: %d", name, n)
    })
}

func task(name="") {
    printf("starting %s\n", name)
    time.sleep(1)
    # this would result in a deadlock because subTask
    # calls each that also uses callFunction
    # subTask(name)
    printf("%s done\n", name)
    return {"answer": 42}
}

ts := []
ts.append(threads.new(fetch, "http://ipinfo.io"))
ts.append(threads.new(time.sleep, 1))
ts.append(threads.new(task, "test1"))
ts.append(threads.new(time.sleep, 1))
ts.append(threads.new(print, "test2"))
ts.append(threads.new(task, "test3"))
ts.append(threads.new(time.sleep, 1))

print("start: ", time.now())
ts.each(func(t){
    t.start()
})

res := []
ts.each(func(t){
    res.append(t.wait())
})
print("finish: ", time.now())

printf("The answer to the Ultimate Question of Life, the Universe, and Everything is %d\n", res[2].answer)
