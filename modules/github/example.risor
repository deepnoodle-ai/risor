// Example usage of the GitHub module
// This example shows how to use the GitHub API to fetch repository information

// Create an unauthenticated client (limited access)
client := github.client()

// Get public repository information
repo := client.get_repo("octocat", "Hello-World")
print("Repository name:", repo.name)
print("Description:", repo.description)
print("Stars:", repo.stargazers_count)
print("Language:", repo.language)
print("Open issues:", repo.open_issues_count)

// List recent commits
commits := client.list_commits("octocat", "Hello-World")
print("\nRecent commits:")
for i, commit := range commits[:5] {
    print(fmt.sprintf("%d. %s - %s", i+1, commit.sha[:7], commit.commit.message))
}

// List repository contents
print("\nRepository contents:")
contents := client.list_repo_contents("octocat", "Hello-World", "")
for item := range contents {
    print(fmt.sprintf("%s (%s)", item.name, item.type))
}

// Get user information
user := client.get_user("octocat")
print("\nUser information:")
print("Name:", user.name)
print("Company:", user.company)
print("Location:", user.location)
print("Public repos:", user.public_repos)

// Example with authentication (uncomment and provide your token)
// auth_client := github.client("your-github-token")
// 
// // List pull requests
// prs := auth_client.list_pull_requests("owner", "repo")
// print("Pull requests:")
// for pr := range prs {
//     print(fmt.sprintf("#%d: %s (%s)", pr.number, pr.title, pr.state))
// }
// 
// // List workflow runs
// runs := auth_client.list_workflow_runs("owner", "repo")
// print("Workflow runs:")
// for run := range runs {
//     print(fmt.sprintf("Run #%d: %s (%s)", run.id, run.name, run.status))
// }